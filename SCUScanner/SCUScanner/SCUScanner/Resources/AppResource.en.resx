<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AskBluetoothSetText" xml:space="preserve">
    <value>Bluetooth is not enabled, enable Bluetooth?</value>
  </data>
  <data name="BlueToothTornOffText" xml:space="preserve">
    <value>Bluetooth not available.
Turn On Bluetooth and press </value>
  </data>
  <data name="BluetoothUnsupportText" xml:space="preserve">
    <value>Bluetooth unsupported</value>
  </data>
  <data name="CancelText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ConnectButtonText" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="ConnectingText" xml:space="preserve">
    <value>Connecting...</value>
  </data>
  <data name="ConnectStatusText" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="ContinuousScanText" xml:space="preserve">
    <value>Continuous scan</value>
  </data>
  <data name="DataText" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="DevicesText" xml:space="preserve">
    <value>Devices</value>
  </data>
  <data name="DisConnectButtonText" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="DisconnectStatusText" xml:space="preserve">
    <value>Disconnected</value>
  </data>
  <data name="HelpText" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MaintenanceText" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="ManualScanText" xml:space="preserve">
    <value>Manual scan</value>
  </data>
  <data name="OkText" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ScanText" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="SelectedLanguageCodeText" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SetHintBluetoothAndroidText" xml:space="preserve">
    <value>On the Android device select "Settings" &gt; "Communication" &gt; Bluetooth and make sure Bluetooth switch is in position "On".</value>
  </data>
  <data name="SetHintBluetoothIOSText" xml:space="preserve">
    <value>On your iOS device, tap Settings &gt; Bluetooth and make sure Bluetooth switch is in position "On".</value>
  </data>
  <data name="SettingsText" xml:space="preserve">
    <value>SettingsEn</value>
  </data>
  <data name="SparesText" xml:space="preserve">
    <value>Spares</value>
  </data>
  <data name="StopScanText" xml:space="preserve">
    <value>Stop scan</value>
  </data>
  <data name="InfoPermissionLocationText" xml:space="preserve">
    <value>To access the hardware identifiers of nearby external devices via Bluetooth and Wi-Fi scans, your app must now have the ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION permissions</value>
  </data>
  <data name="LocationNameText" xml:space="preserve">
    <value>Location name</value>
  </data>
  <data name="MainText" xml:space="preserve">
    <value>Main</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="NoteText" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="ConnectedDeviceCaptionText" xml:space="preserve">
    <value>Connected device</value>
  </data>
  <data name="DeviceSettingsCaptionText" xml:space="preserve">
    <value>Device Settings</value>
  </data>
  <data name="NearbyDevicesCaptionText" xml:space="preserve">
    <value>Nearby Devices</value>
  </data>
  <data name="OperatorNameText" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="DownloadText" xml:space="preserve">
    <value>Download Manual</value>
  </data>
  <data name="StatusText" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="AlarmHoursText" xml:space="preserve">
    <value>Alarm hours</value>
  </data>
  <data name="AlarmLevelText" xml:space="preserve">
    <value>Alarm level %</value>
  </data>
  <data name="BroadcastIdentityText" xml:space="preserve">
    <value>Broadcast identity</value>
  </data>
  <data name="CutOffText" xml:space="preserve">
    <value>Cut off %</value>
  </data>
  <data name="SendButtonText" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SetSerialNumberInfoText" xml:space="preserve">
    <value>Set serial number note this text
box only visible on factory version</value>
  </data>
  <data name="SetSerialNumberText" xml:space="preserve">
    <value>Set serial number</value>
  </data>
  <data name="AlarmSpeedText" xml:space="preserve">
    <value>Alarm Speed</value>
  </data>
  <data name="BroadCastIdText" xml:space="preserve">
    <value>Broadcast identity</value>
  </data>
  <data name="DateWithTimeText" xml:space="preserve">
    <value>Date/Time</value>
  </data>
  <data name="HoursElapsedText" xml:space="preserve">
    <value>Hours Elapsed</value>
  </data>
  <data name="UnitNameText" xml:space="preserve">
    <value>Unit Name</value>
  </data>
  <data name="LocationText" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="NotesText" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="OperatorText" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="SerialNoText" xml:space="preserve">
    <value>Serial No</value>
  </data>
  <data name="SpeedText" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="AllColumnsText" xml:space="preserve">
    <value>All Columns</value>
  </data>
  <data name="ContainsText" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="EqualsText" xml:space="preserve">
    <value>Equals</value>
  </data>
  <data name="NotEqualsText" xml:space="preserve">
    <value>NotEquals</value>
  </data>
  <data name="FilterText" xml:space="preserve">
    <value>Search here to filter</value>
  </data>
  <data name="EnterSerialNumberText" xml:space="preserve">
    <value>Enter serial number</value>
  </data>
  <data name="ListOfManualsText" xml:space="preserve">
    <value>List of manuals</value>
  </data>
  <data name="ScanQRCode" xml:space="preserve">
    <value>Scan the units QR code</value>
  </data>
  <data name="ManualNotFoundText" xml:space="preserve">
    <value>Manual not found</value>
  </data>
  <data name="NoInternetConOrErrorText" xml:space="preserve">
    <value>No Internet access or connection error. Open local copy of manual</value>
  </data>
  <data name="RMPText" xml:space="preserve">
    <value>RMP</value>
  </data>
  <data name="AlarmText" xml:space="preserve">
    <value>Alarm at</value>
  </data>
  <data name="DeleteText" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="HoursRunText" xml:space="preserve">
    <value>Hours Run</value>
  </data>
  <data name="DeletingText" xml:space="preserve">
    <value>Deleting...</value>
  </data>
  <data name="SelectText" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SendingValueText" xml:space="preserve">
    <value>Sending value...</value>
  </data>
  <data name="RangeWillBeValueText" xml:space="preserve">
    <value>The range will be between {0} and {1}</value>
  </data>
  <data name="LengthMustBeText" xml:space="preserve">
    <value>length must be {0} characters</value>
  </data>
</root>